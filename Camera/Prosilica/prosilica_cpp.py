# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _prosilica_cpp
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class PySwigIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PySwigIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PySwigIterator, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _prosilica_cpp.delete_PySwigIterator
    __del__ = lambda self : None;
    def value(*args): return _prosilica_cpp.PySwigIterator_value(*args)
    def incr(*args): return _prosilica_cpp.PySwigIterator_incr(*args)
    def decr(*args): return _prosilica_cpp.PySwigIterator_decr(*args)
    def distance(*args): return _prosilica_cpp.PySwigIterator_distance(*args)
    def equal(*args): return _prosilica_cpp.PySwigIterator_equal(*args)
    def copy(*args): return _prosilica_cpp.PySwigIterator_copy(*args)
    def next(*args): return _prosilica_cpp.PySwigIterator_next(*args)
    def previous(*args): return _prosilica_cpp.PySwigIterator_previous(*args)
    def advance(*args): return _prosilica_cpp.PySwigIterator_advance(*args)
    def __eq__(*args): return _prosilica_cpp.PySwigIterator___eq__(*args)
    def __ne__(*args): return _prosilica_cpp.PySwigIterator___ne__(*args)
    def __iadd__(*args): return _prosilica_cpp.PySwigIterator___iadd__(*args)
    def __isub__(*args): return _prosilica_cpp.PySwigIterator___isub__(*args)
    def __add__(*args): return _prosilica_cpp.PySwigIterator___add__(*args)
    def __sub__(*args): return _prosilica_cpp.PySwigIterator___sub__(*args)
    def __iter__(self): return self
PySwigIterator_swigregister = _prosilica_cpp.PySwigIterator_swigregister
PySwigIterator_swigregister(PySwigIterator)

class vector_pv_caminfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, vector_pv_caminfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, vector_pv_caminfo, name)
    __repr__ = _swig_repr
    def iterator(*args): return _prosilica_cpp.vector_pv_caminfo_iterator(*args)
    def __iter__(self): return self.iterator()
    def __nonzero__(*args): return _prosilica_cpp.vector_pv_caminfo___nonzero__(*args)
    def __len__(*args): return _prosilica_cpp.vector_pv_caminfo___len__(*args)
    def pop(*args): return _prosilica_cpp.vector_pv_caminfo_pop(*args)
    def __getslice__(*args): return _prosilica_cpp.vector_pv_caminfo___getslice__(*args)
    def __setslice__(*args): return _prosilica_cpp.vector_pv_caminfo___setslice__(*args)
    def __delslice__(*args): return _prosilica_cpp.vector_pv_caminfo___delslice__(*args)
    def __delitem__(*args): return _prosilica_cpp.vector_pv_caminfo___delitem__(*args)
    def __getitem__(*args): return _prosilica_cpp.vector_pv_caminfo___getitem__(*args)
    def __setitem__(*args): return _prosilica_cpp.vector_pv_caminfo___setitem__(*args)
    def append(*args): return _prosilica_cpp.vector_pv_caminfo_append(*args)
    def empty(*args): return _prosilica_cpp.vector_pv_caminfo_empty(*args)
    def size(*args): return _prosilica_cpp.vector_pv_caminfo_size(*args)
    def clear(*args): return _prosilica_cpp.vector_pv_caminfo_clear(*args)
    def swap(*args): return _prosilica_cpp.vector_pv_caminfo_swap(*args)
    def get_allocator(*args): return _prosilica_cpp.vector_pv_caminfo_get_allocator(*args)
    def begin(*args): return _prosilica_cpp.vector_pv_caminfo_begin(*args)
    def end(*args): return _prosilica_cpp.vector_pv_caminfo_end(*args)
    def rbegin(*args): return _prosilica_cpp.vector_pv_caminfo_rbegin(*args)
    def rend(*args): return _prosilica_cpp.vector_pv_caminfo_rend(*args)
    def pop_back(*args): return _prosilica_cpp.vector_pv_caminfo_pop_back(*args)
    def erase(*args): return _prosilica_cpp.vector_pv_caminfo_erase(*args)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_vector_pv_caminfo(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(*args): return _prosilica_cpp.vector_pv_caminfo_push_back(*args)
    def front(*args): return _prosilica_cpp.vector_pv_caminfo_front(*args)
    def back(*args): return _prosilica_cpp.vector_pv_caminfo_back(*args)
    def assign(*args): return _prosilica_cpp.vector_pv_caminfo_assign(*args)
    def resize(*args): return _prosilica_cpp.vector_pv_caminfo_resize(*args)
    def insert(*args): return _prosilica_cpp.vector_pv_caminfo_insert(*args)
    def reserve(*args): return _prosilica_cpp.vector_pv_caminfo_reserve(*args)
    def capacity(*args): return _prosilica_cpp.vector_pv_caminfo_capacity(*args)
    __swig_destroy__ = _prosilica_cpp.delete_vector_pv_caminfo
    __del__ = lambda self : None;
vector_pv_caminfo_swigregister = _prosilica_cpp.vector_pv_caminfo_swigregister
vector_pv_caminfo_swigregister(vector_pv_caminfo)

PVINFINITE = _prosilica_cpp.PVINFINITE
ePvErrSuccess = _prosilica_cpp.ePvErrSuccess
ePvErrCameraFault = _prosilica_cpp.ePvErrCameraFault
ePvErrInternalFault = _prosilica_cpp.ePvErrInternalFault
ePvErrBadHandle = _prosilica_cpp.ePvErrBadHandle
ePvErrBadParameter = _prosilica_cpp.ePvErrBadParameter
ePvErrBadSequence = _prosilica_cpp.ePvErrBadSequence
ePvErrNotFound = _prosilica_cpp.ePvErrNotFound
ePvErrAccessDenied = _prosilica_cpp.ePvErrAccessDenied
ePvErrUnplugged = _prosilica_cpp.ePvErrUnplugged
ePvErrInvalidSetup = _prosilica_cpp.ePvErrInvalidSetup
ePvErrResources = _prosilica_cpp.ePvErrResources
ePvErrBandwidth = _prosilica_cpp.ePvErrBandwidth
ePvErrQueueFull = _prosilica_cpp.ePvErrQueueFull
ePvErrBufferTooSmall = _prosilica_cpp.ePvErrBufferTooSmall
ePvErrCancelled = _prosilica_cpp.ePvErrCancelled
ePvErrDataLost = _prosilica_cpp.ePvErrDataLost
ePvErrDataMissing = _prosilica_cpp.ePvErrDataMissing
ePvErrTimeout = _prosilica_cpp.ePvErrTimeout
ePvErrOutOfRange = _prosilica_cpp.ePvErrOutOfRange
ePvErrWrongType = _prosilica_cpp.ePvErrWrongType
ePvErrForbidden = _prosilica_cpp.ePvErrForbidden
ePvErrUnavailable = _prosilica_cpp.ePvErrUnavailable
ePvErrFirewall = _prosilica_cpp.ePvErrFirewall
__ePvErr_force_32 = _prosilica_cpp.__ePvErr_force_32
ePvAccessMonitor = _prosilica_cpp.ePvAccessMonitor
ePvAccessMaster = _prosilica_cpp.ePvAccessMaster
__ePvAccess_force_32 = _prosilica_cpp.__ePvAccess_force_32
ePvInterfaceFirewire = _prosilica_cpp.ePvInterfaceFirewire
ePvInterfaceEthernet = _prosilica_cpp.ePvInterfaceEthernet
__ePvInterface_force_32 = _prosilica_cpp.__ePvInterface_force_32
class tPvCameraInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvCameraInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvCameraInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfo_UniqueId_set
    __swig_getmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfo_UniqueId_get
    if _newclass:UniqueId = _swig_property(_prosilica_cpp.tPvCameraInfo_UniqueId_get, _prosilica_cpp.tPvCameraInfo_UniqueId_set)
    __swig_setmethods__["SerialString"] = _prosilica_cpp.tPvCameraInfo_SerialString_set
    __swig_getmethods__["SerialString"] = _prosilica_cpp.tPvCameraInfo_SerialString_get
    if _newclass:SerialString = _swig_property(_prosilica_cpp.tPvCameraInfo_SerialString_get, _prosilica_cpp.tPvCameraInfo_SerialString_set)
    __swig_setmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfo_PartNumber_set
    __swig_getmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfo_PartNumber_get
    if _newclass:PartNumber = _swig_property(_prosilica_cpp.tPvCameraInfo_PartNumber_get, _prosilica_cpp.tPvCameraInfo_PartNumber_set)
    __swig_setmethods__["PartVersion"] = _prosilica_cpp.tPvCameraInfo_PartVersion_set
    __swig_getmethods__["PartVersion"] = _prosilica_cpp.tPvCameraInfo_PartVersion_get
    if _newclass:PartVersion = _swig_property(_prosilica_cpp.tPvCameraInfo_PartVersion_get, _prosilica_cpp.tPvCameraInfo_PartVersion_set)
    __swig_setmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfo_PermittedAccess_set
    __swig_getmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfo_PermittedAccess_get
    if _newclass:PermittedAccess = _swig_property(_prosilica_cpp.tPvCameraInfo_PermittedAccess_get, _prosilica_cpp.tPvCameraInfo_PermittedAccess_set)
    __swig_setmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfo_InterfaceId_set
    __swig_getmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfo_InterfaceId_get
    if _newclass:InterfaceId = _swig_property(_prosilica_cpp.tPvCameraInfo_InterfaceId_get, _prosilica_cpp.tPvCameraInfo_InterfaceId_set)
    __swig_setmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfo_InterfaceType_set
    __swig_getmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfo_InterfaceType_get
    if _newclass:InterfaceType = _swig_property(_prosilica_cpp.tPvCameraInfo_InterfaceType_get, _prosilica_cpp.tPvCameraInfo_InterfaceType_set)
    __swig_setmethods__["DisplayName"] = _prosilica_cpp.tPvCameraInfo_DisplayName_set
    __swig_getmethods__["DisplayName"] = _prosilica_cpp.tPvCameraInfo_DisplayName_get
    if _newclass:DisplayName = _swig_property(_prosilica_cpp.tPvCameraInfo_DisplayName_get, _prosilica_cpp.tPvCameraInfo_DisplayName_set)
    __swig_setmethods__["_reserved"] = _prosilica_cpp.tPvCameraInfo__reserved_set
    __swig_getmethods__["_reserved"] = _prosilica_cpp.tPvCameraInfo__reserved_get
    if _newclass:_reserved = _swig_property(_prosilica_cpp.tPvCameraInfo__reserved_get, _prosilica_cpp.tPvCameraInfo__reserved_set)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_tPvCameraInfo(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvCameraInfo
    __del__ = lambda self : None;
tPvCameraInfo_swigregister = _prosilica_cpp.tPvCameraInfo_swigregister
tPvCameraInfo_swigregister(tPvCameraInfo)

ePvIpConfigPersistent = _prosilica_cpp.ePvIpConfigPersistent
ePvIpConfigDhcp = _prosilica_cpp.ePvIpConfigDhcp
ePvIpConfigAutoIp = _prosilica_cpp.ePvIpConfigAutoIp
__ePvIpConfig_force_32 = _prosilica_cpp.__ePvIpConfig_force_32
class tPvIpSettings(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvIpSettings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvIpSettings, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ConfigMode"] = _prosilica_cpp.tPvIpSettings_ConfigMode_set
    __swig_getmethods__["ConfigMode"] = _prosilica_cpp.tPvIpSettings_ConfigMode_get
    if _newclass:ConfigMode = _swig_property(_prosilica_cpp.tPvIpSettings_ConfigMode_get, _prosilica_cpp.tPvIpSettings_ConfigMode_set)
    __swig_setmethods__["ConfigModeSupport"] = _prosilica_cpp.tPvIpSettings_ConfigModeSupport_set
    __swig_getmethods__["ConfigModeSupport"] = _prosilica_cpp.tPvIpSettings_ConfigModeSupport_get
    if _newclass:ConfigModeSupport = _swig_property(_prosilica_cpp.tPvIpSettings_ConfigModeSupport_get, _prosilica_cpp.tPvIpSettings_ConfigModeSupport_set)
    __swig_setmethods__["CurrentIpAddress"] = _prosilica_cpp.tPvIpSettings_CurrentIpAddress_set
    __swig_getmethods__["CurrentIpAddress"] = _prosilica_cpp.tPvIpSettings_CurrentIpAddress_get
    if _newclass:CurrentIpAddress = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpAddress_get, _prosilica_cpp.tPvIpSettings_CurrentIpAddress_set)
    __swig_setmethods__["CurrentIpSubnet"] = _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_set
    __swig_getmethods__["CurrentIpSubnet"] = _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_get
    if _newclass:CurrentIpSubnet = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpSubnet_get, _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_set)
    __swig_setmethods__["CurrentIpGateway"] = _prosilica_cpp.tPvIpSettings_CurrentIpGateway_set
    __swig_getmethods__["CurrentIpGateway"] = _prosilica_cpp.tPvIpSettings_CurrentIpGateway_get
    if _newclass:CurrentIpGateway = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpGateway_get, _prosilica_cpp.tPvIpSettings_CurrentIpGateway_set)
    __swig_setmethods__["PersistentIpAddr"] = _prosilica_cpp.tPvIpSettings_PersistentIpAddr_set
    __swig_getmethods__["PersistentIpAddr"] = _prosilica_cpp.tPvIpSettings_PersistentIpAddr_get
    if _newclass:PersistentIpAddr = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpAddr_get, _prosilica_cpp.tPvIpSettings_PersistentIpAddr_set)
    __swig_setmethods__["PersistentIpSubnet"] = _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_set
    __swig_getmethods__["PersistentIpSubnet"] = _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_get
    if _newclass:PersistentIpSubnet = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpSubnet_get, _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_set)
    __swig_setmethods__["PersistentIpGateway"] = _prosilica_cpp.tPvIpSettings_PersistentIpGateway_set
    __swig_getmethods__["PersistentIpGateway"] = _prosilica_cpp.tPvIpSettings_PersistentIpGateway_get
    if _newclass:PersistentIpGateway = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpGateway_get, _prosilica_cpp.tPvIpSettings_PersistentIpGateway_set)
    __swig_setmethods__["_reserved1"] = _prosilica_cpp.tPvIpSettings__reserved1_set
    __swig_getmethods__["_reserved1"] = _prosilica_cpp.tPvIpSettings__reserved1_get
    if _newclass:_reserved1 = _swig_property(_prosilica_cpp.tPvIpSettings__reserved1_get, _prosilica_cpp.tPvIpSettings__reserved1_set)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_tPvIpSettings(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvIpSettings
    __del__ = lambda self : None;
tPvIpSettings_swigregister = _prosilica_cpp.tPvIpSettings_swigregister
tPvIpSettings_swigregister(tPvIpSettings)

ePvLinkAdd = _prosilica_cpp.ePvLinkAdd
ePvLinkRemove = _prosilica_cpp.ePvLinkRemove
_ePvLink_reserved1 = _prosilica_cpp._ePvLink_reserved1
__ePvLink_force_32 = _prosilica_cpp.__ePvLink_force_32
ePvFmtMono8 = _prosilica_cpp.ePvFmtMono8
ePvFmtMono16 = _prosilica_cpp.ePvFmtMono16
ePvFmtBayer8 = _prosilica_cpp.ePvFmtBayer8
ePvFmtBayer16 = _prosilica_cpp.ePvFmtBayer16
ePvFmtRgb24 = _prosilica_cpp.ePvFmtRgb24
ePvFmtRgb48 = _prosilica_cpp.ePvFmtRgb48
ePvFmtYuv411 = _prosilica_cpp.ePvFmtYuv411
ePvFmtYuv422 = _prosilica_cpp.ePvFmtYuv422
ePvFmtYuv444 = _prosilica_cpp.ePvFmtYuv444
ePvFmtBgr24 = _prosilica_cpp.ePvFmtBgr24
ePvFmtRgba32 = _prosilica_cpp.ePvFmtRgba32
ePvFmtBgra32 = _prosilica_cpp.ePvFmtBgra32
__ePvFmt_force_32 = _prosilica_cpp.__ePvFmt_force_32
ePvBayerRGGB = _prosilica_cpp.ePvBayerRGGB
ePvBayerGBRG = _prosilica_cpp.ePvBayerGBRG
ePvBayerGRBG = _prosilica_cpp.ePvBayerGRBG
ePvBayerBGGR = _prosilica_cpp.ePvBayerBGGR
__ePvBayer_force_32 = _prosilica_cpp.__ePvBayer_force_32
class tPvFrame(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvFrame, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvFrame, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ImageBuffer"] = _prosilica_cpp.tPvFrame_ImageBuffer_set
    __swig_getmethods__["ImageBuffer"] = _prosilica_cpp.tPvFrame_ImageBuffer_get
    if _newclass:ImageBuffer = _swig_property(_prosilica_cpp.tPvFrame_ImageBuffer_get, _prosilica_cpp.tPvFrame_ImageBuffer_set)
    __swig_setmethods__["ImageBufferSize"] = _prosilica_cpp.tPvFrame_ImageBufferSize_set
    __swig_getmethods__["ImageBufferSize"] = _prosilica_cpp.tPvFrame_ImageBufferSize_get
    if _newclass:ImageBufferSize = _swig_property(_prosilica_cpp.tPvFrame_ImageBufferSize_get, _prosilica_cpp.tPvFrame_ImageBufferSize_set)
    __swig_setmethods__["AncillaryBuffer"] = _prosilica_cpp.tPvFrame_AncillaryBuffer_set
    __swig_getmethods__["AncillaryBuffer"] = _prosilica_cpp.tPvFrame_AncillaryBuffer_get
    if _newclass:AncillaryBuffer = _swig_property(_prosilica_cpp.tPvFrame_AncillaryBuffer_get, _prosilica_cpp.tPvFrame_AncillaryBuffer_set)
    __swig_setmethods__["AncillaryBufferSize"] = _prosilica_cpp.tPvFrame_AncillaryBufferSize_set
    __swig_getmethods__["AncillaryBufferSize"] = _prosilica_cpp.tPvFrame_AncillaryBufferSize_get
    if _newclass:AncillaryBufferSize = _swig_property(_prosilica_cpp.tPvFrame_AncillaryBufferSize_get, _prosilica_cpp.tPvFrame_AncillaryBufferSize_set)
    __swig_setmethods__["Context"] = _prosilica_cpp.tPvFrame_Context_set
    __swig_getmethods__["Context"] = _prosilica_cpp.tPvFrame_Context_get
    if _newclass:Context = _swig_property(_prosilica_cpp.tPvFrame_Context_get, _prosilica_cpp.tPvFrame_Context_set)
    __swig_setmethods__["_reserved1"] = _prosilica_cpp.tPvFrame__reserved1_set
    __swig_getmethods__["_reserved1"] = _prosilica_cpp.tPvFrame__reserved1_get
    if _newclass:_reserved1 = _swig_property(_prosilica_cpp.tPvFrame__reserved1_get, _prosilica_cpp.tPvFrame__reserved1_set)
    __swig_setmethods__["Status"] = _prosilica_cpp.tPvFrame_Status_set
    __swig_getmethods__["Status"] = _prosilica_cpp.tPvFrame_Status_get
    if _newclass:Status = _swig_property(_prosilica_cpp.tPvFrame_Status_get, _prosilica_cpp.tPvFrame_Status_set)
    __swig_setmethods__["ImageSize"] = _prosilica_cpp.tPvFrame_ImageSize_set
    __swig_getmethods__["ImageSize"] = _prosilica_cpp.tPvFrame_ImageSize_get
    if _newclass:ImageSize = _swig_property(_prosilica_cpp.tPvFrame_ImageSize_get, _prosilica_cpp.tPvFrame_ImageSize_set)
    __swig_setmethods__["AncillarySize"] = _prosilica_cpp.tPvFrame_AncillarySize_set
    __swig_getmethods__["AncillarySize"] = _prosilica_cpp.tPvFrame_AncillarySize_get
    if _newclass:AncillarySize = _swig_property(_prosilica_cpp.tPvFrame_AncillarySize_get, _prosilica_cpp.tPvFrame_AncillarySize_set)
    __swig_setmethods__["Width"] = _prosilica_cpp.tPvFrame_Width_set
    __swig_getmethods__["Width"] = _prosilica_cpp.tPvFrame_Width_get
    if _newclass:Width = _swig_property(_prosilica_cpp.tPvFrame_Width_get, _prosilica_cpp.tPvFrame_Width_set)
    __swig_setmethods__["Height"] = _prosilica_cpp.tPvFrame_Height_set
    __swig_getmethods__["Height"] = _prosilica_cpp.tPvFrame_Height_get
    if _newclass:Height = _swig_property(_prosilica_cpp.tPvFrame_Height_get, _prosilica_cpp.tPvFrame_Height_set)
    __swig_setmethods__["RegionX"] = _prosilica_cpp.tPvFrame_RegionX_set
    __swig_getmethods__["RegionX"] = _prosilica_cpp.tPvFrame_RegionX_get
    if _newclass:RegionX = _swig_property(_prosilica_cpp.tPvFrame_RegionX_get, _prosilica_cpp.tPvFrame_RegionX_set)
    __swig_setmethods__["RegionY"] = _prosilica_cpp.tPvFrame_RegionY_set
    __swig_getmethods__["RegionY"] = _prosilica_cpp.tPvFrame_RegionY_get
    if _newclass:RegionY = _swig_property(_prosilica_cpp.tPvFrame_RegionY_get, _prosilica_cpp.tPvFrame_RegionY_set)
    __swig_setmethods__["Format"] = _prosilica_cpp.tPvFrame_Format_set
    __swig_getmethods__["Format"] = _prosilica_cpp.tPvFrame_Format_get
    if _newclass:Format = _swig_property(_prosilica_cpp.tPvFrame_Format_get, _prosilica_cpp.tPvFrame_Format_set)
    __swig_setmethods__["BitDepth"] = _prosilica_cpp.tPvFrame_BitDepth_set
    __swig_getmethods__["BitDepth"] = _prosilica_cpp.tPvFrame_BitDepth_get
    if _newclass:BitDepth = _swig_property(_prosilica_cpp.tPvFrame_BitDepth_get, _prosilica_cpp.tPvFrame_BitDepth_set)
    __swig_setmethods__["BayerPattern"] = _prosilica_cpp.tPvFrame_BayerPattern_set
    __swig_getmethods__["BayerPattern"] = _prosilica_cpp.tPvFrame_BayerPattern_get
    if _newclass:BayerPattern = _swig_property(_prosilica_cpp.tPvFrame_BayerPattern_get, _prosilica_cpp.tPvFrame_BayerPattern_set)
    __swig_setmethods__["FrameCount"] = _prosilica_cpp.tPvFrame_FrameCount_set
    __swig_getmethods__["FrameCount"] = _prosilica_cpp.tPvFrame_FrameCount_get
    if _newclass:FrameCount = _swig_property(_prosilica_cpp.tPvFrame_FrameCount_get, _prosilica_cpp.tPvFrame_FrameCount_set)
    __swig_setmethods__["TimestampLo"] = _prosilica_cpp.tPvFrame_TimestampLo_set
    __swig_getmethods__["TimestampLo"] = _prosilica_cpp.tPvFrame_TimestampLo_get
    if _newclass:TimestampLo = _swig_property(_prosilica_cpp.tPvFrame_TimestampLo_get, _prosilica_cpp.tPvFrame_TimestampLo_set)
    __swig_setmethods__["TimestampHi"] = _prosilica_cpp.tPvFrame_TimestampHi_set
    __swig_getmethods__["TimestampHi"] = _prosilica_cpp.tPvFrame_TimestampHi_get
    if _newclass:TimestampHi = _swig_property(_prosilica_cpp.tPvFrame_TimestampHi_get, _prosilica_cpp.tPvFrame_TimestampHi_set)
    __swig_setmethods__["_reserved2"] = _prosilica_cpp.tPvFrame__reserved2_set
    __swig_getmethods__["_reserved2"] = _prosilica_cpp.tPvFrame__reserved2_get
    if _newclass:_reserved2 = _swig_property(_prosilica_cpp.tPvFrame__reserved2_get, _prosilica_cpp.tPvFrame__reserved2_set)
    def __get_array_struct(*args): return _prosilica_cpp.tPvFrame___get_array_struct(*args)
    def __get_timestamp(*args): return _prosilica_cpp.tPvFrame___get_timestamp(*args)
    __array_struct__ = property(__get_array_struct, doc="Array Protocol")

    def __init__(self, *args): 
        this = _prosilica_cpp.new_tPvFrame(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvFrame
    __del__ = lambda self : None;
tPvFrame_swigregister = _prosilica_cpp.tPvFrame_swigregister
tPvFrame_swigregister(tPvFrame)

ePvDatatypeUnknown = _prosilica_cpp.ePvDatatypeUnknown
ePvDatatypeCommand = _prosilica_cpp.ePvDatatypeCommand
ePvDatatypeRaw = _prosilica_cpp.ePvDatatypeRaw
ePvDatatypeString = _prosilica_cpp.ePvDatatypeString
ePvDatatypeEnum = _prosilica_cpp.ePvDatatypeEnum
ePvDatatypeUint32 = _prosilica_cpp.ePvDatatypeUint32
ePvDatatypeFloat32 = _prosilica_cpp.ePvDatatypeFloat32
__ePvDatatypeforce_32 = _prosilica_cpp.__ePvDatatypeforce_32
ePvFlagRead = _prosilica_cpp.ePvFlagRead
ePvFlagWrite = _prosilica_cpp.ePvFlagWrite
ePvFlagVolatile = _prosilica_cpp.ePvFlagVolatile
ePvFlagConst = _prosilica_cpp.ePvFlagConst
__ePvFlag_force_32 = _prosilica_cpp.__ePvFlag_force_32
class tPvAttributeInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvAttributeInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvAttributeInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Datatype"] = _prosilica_cpp.tPvAttributeInfo_Datatype_set
    __swig_getmethods__["Datatype"] = _prosilica_cpp.tPvAttributeInfo_Datatype_get
    if _newclass:Datatype = _swig_property(_prosilica_cpp.tPvAttributeInfo_Datatype_get, _prosilica_cpp.tPvAttributeInfo_Datatype_set)
    __swig_setmethods__["Flags"] = _prosilica_cpp.tPvAttributeInfo_Flags_set
    __swig_getmethods__["Flags"] = _prosilica_cpp.tPvAttributeInfo_Flags_get
    if _newclass:Flags = _swig_property(_prosilica_cpp.tPvAttributeInfo_Flags_get, _prosilica_cpp.tPvAttributeInfo_Flags_set)
    __swig_setmethods__["Category"] = _prosilica_cpp.tPvAttributeInfo_Category_set
    __swig_getmethods__["Category"] = _prosilica_cpp.tPvAttributeInfo_Category_get
    if _newclass:Category = _swig_property(_prosilica_cpp.tPvAttributeInfo_Category_get, _prosilica_cpp.tPvAttributeInfo_Category_set)
    __swig_setmethods__["Impact"] = _prosilica_cpp.tPvAttributeInfo_Impact_set
    __swig_getmethods__["Impact"] = _prosilica_cpp.tPvAttributeInfo_Impact_get
    if _newclass:Impact = _swig_property(_prosilica_cpp.tPvAttributeInfo_Impact_get, _prosilica_cpp.tPvAttributeInfo_Impact_set)
    __swig_setmethods__["_reserved"] = _prosilica_cpp.tPvAttributeInfo__reserved_set
    __swig_getmethods__["_reserved"] = _prosilica_cpp.tPvAttributeInfo__reserved_get
    if _newclass:_reserved = _swig_property(_prosilica_cpp.tPvAttributeInfo__reserved_get, _prosilica_cpp.tPvAttributeInfo__reserved_set)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_tPvAttributeInfo(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvAttributeInfo
    __del__ = lambda self : None;
tPvAttributeInfo_swigregister = _prosilica_cpp.tPvAttributeInfo_swigregister
tPvAttributeInfo_swigregister(tPvAttributeInfo)

PvVersion = _prosilica_cpp.PvVersion
PvInitialize = _prosilica_cpp.PvInitialize
PvUnInitialize = _prosilica_cpp.PvUnInitialize
PvLinkCallbackRegister = _prosilica_cpp.PvLinkCallbackRegister
PvLinkCallbackUnRegister = _prosilica_cpp.PvLinkCallbackUnRegister
PvCameraList = _prosilica_cpp.PvCameraList
PvCameraCount = _prosilica_cpp.PvCameraCount
PvCameraInfo = _prosilica_cpp.PvCameraInfo
PvCameraInfoByAddr = _prosilica_cpp.PvCameraInfoByAddr
PvCameraListUnreachable = _prosilica_cpp.PvCameraListUnreachable
PvCameraOpen = _prosilica_cpp.PvCameraOpen
PvCameraOpenByAddr = _prosilica_cpp.PvCameraOpenByAddr
PvCameraClose = _prosilica_cpp.PvCameraClose
PvCameraIpSettingsGet = _prosilica_cpp.PvCameraIpSettingsGet
PvCameraIpSettingsChange = _prosilica_cpp.PvCameraIpSettingsChange
PvCaptureStart = _prosilica_cpp.PvCaptureStart
PvCaptureEnd = _prosilica_cpp.PvCaptureEnd
PvCaptureQuery = _prosilica_cpp.PvCaptureQuery
PvCaptureAdjustPacketSize = _prosilica_cpp.PvCaptureAdjustPacketSize
PvCaptureQueueFrame = _prosilica_cpp.PvCaptureQueueFrame
PvCaptureQueueClear = _prosilica_cpp.PvCaptureQueueClear
PvCaptureWaitForFrameDone = _prosilica_cpp.PvCaptureWaitForFrameDone
PvAttrList = _prosilica_cpp.PvAttrList
PvAttrInfo = _prosilica_cpp.PvAttrInfo
PvAttrExists = _prosilica_cpp.PvAttrExists
PvAttrIsAvailable = _prosilica_cpp.PvAttrIsAvailable
PvAttrIsValid = _prosilica_cpp.PvAttrIsValid
PvAttrRangeEnum = _prosilica_cpp.PvAttrRangeEnum
PvAttrRangeUint32 = _prosilica_cpp.PvAttrRangeUint32
PvAttrRangeFloat32 = _prosilica_cpp.PvAttrRangeFloat32
PvCommandRun = _prosilica_cpp.PvCommandRun
PvAttrStringGet = _prosilica_cpp.PvAttrStringGet
PvAttrStringSet = _prosilica_cpp.PvAttrStringSet
PvAttrEnumGet = _prosilica_cpp.PvAttrEnumGet
PvAttrEnumSet = _prosilica_cpp.PvAttrEnumSet
PvAttrUint32Get = _prosilica_cpp.PvAttrUint32Get
PvAttrUint32Set = _prosilica_cpp.PvAttrUint32Set
PvAttrFloat32Get = _prosilica_cpp.PvAttrFloat32Get
PvAttrFloat32Set = _prosilica_cpp.PvAttrFloat32Set
PvUtilityColorInterpolate = _prosilica_cpp.PvUtilityColorInterpolate
FRAME_MULTI_BUFFER_SIZE = _prosilica_cpp.FRAME_MULTI_BUFFER_SIZE
HIGH_WATER_MARK = _prosilica_cpp.HIGH_WATER_MARK
FRAME_PENDING = _prosilica_cpp.FRAME_PENDING
FRAME_READY = _prosilica_cpp.FRAME_READY
FRAME_LOCKED = _prosilica_cpp.FRAME_LOCKED
FRAME_DONE = _prosilica_cpp.FRAME_DONE
FRAME_CONTEXT_CAMERA = _prosilica_cpp.FRAME_CONTEXT_CAMERA
FRAME_CONTEXT_INDEX = _prosilica_cpp.FRAME_CONTEXT_INDEX
FRAME_CONTEXT_SOBEL = _prosilica_cpp.FRAME_CONTEXT_SOBEL
frame_callback = _prosilica_cpp.frame_callback
class ProsilicaCamera(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ProsilicaCamera, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ProsilicaCamera, name)
    __repr__ = _swig_repr
    def setAttribute(*args): return _prosilica_cpp.ProsilicaCamera_setAttribute(*args)
    def getUint32Attribute(*args): return _prosilica_cpp.ProsilicaCamera_getUint32Attribute(*args)
    def getFloat32Attribute(*args): return _prosilica_cpp.ProsilicaCamera_getFloat32Attribute(*args)
    def _initFrame(*args): return _prosilica_cpp.ProsilicaCamera__initFrame(*args)
    def _check(*args): return _prosilica_cpp.ProsilicaCamera__check(*args)
    def _reportError(*args): return _prosilica_cpp.ProsilicaCamera__reportError(*args)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_ProsilicaCamera(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_ProsilicaCamera
    __del__ = lambda self : None;
    def startCapture(*args): return _prosilica_cpp.ProsilicaCamera_startCapture(*args)
    def endCapture(*args): return _prosilica_cpp.ProsilicaCamera_endCapture(*args)
    def isCapturing(*args): return _prosilica_cpp.ProsilicaCamera_isCapturing(*args)
    def lockReadyFrames(*args): return _prosilica_cpp.ProsilicaCamera_lockReadyFrames(*args)
    def unlockReadyFrames(*args): return _prosilica_cpp.ProsilicaCamera_unlockReadyFrames(*args)
    def waitForReadyFrames(*args): return _prosilica_cpp.ProsilicaCamera_waitForReadyFrames(*args)
    def broadcastFrameReady(*args): return _prosilica_cpp.ProsilicaCamera_broadcastFrameReady(*args)
    def getAndLockCurrentFrame(*args): return _prosilica_cpp.ProsilicaCamera_getAndLockCurrentFrame(*args)
    def releaseCurrentFrame(*args): return _prosilica_cpp.ProsilicaCamera_releaseCurrentFrame(*args)
    def startContinuousCapture(*args): return _prosilica_cpp.ProsilicaCamera_startContinuousCapture(*args)
    def queueFrame(*args): return _prosilica_cpp.ProsilicaCamera_queueFrame(*args)
    def frameCompleted(*args): return _prosilica_cpp.ProsilicaCamera_frameCompleted(*args)
    def captureOnePvFrame(*args): return _prosilica_cpp.ProsilicaCamera_captureOnePvFrame(*args)
    __swig_getmethods__["initialize"] = lambda x: _prosilica_cpp.ProsilicaCamera_initialize
    if _newclass:initialize = staticmethod(_prosilica_cpp.ProsilicaCamera_initialize)
    __swig_getmethods__["getNumberOfCameras"] = lambda x: _prosilica_cpp.ProsilicaCamera_getNumberOfCameras
    if _newclass:getNumberOfCameras = staticmethod(_prosilica_cpp.ProsilicaCamera_getNumberOfCameras)
    def getAndLockCurrentFrame_NoGIL(*args): return _prosilica_cpp.ProsilicaCamera_getAndLockCurrentFrame_NoGIL(*args)
ProsilicaCamera_swigregister = _prosilica_cpp.ProsilicaCamera_swigregister
ProsilicaCamera_swigregister(ProsilicaCamera)
ProsilicaCamera_initialize = _prosilica_cpp.ProsilicaCamera_initialize
ProsilicaCamera_getNumberOfCameras = _prosilica_cpp.ProsilicaCamera_getNumberOfCameras

_frameTo1DArray = _prosilica_cpp._frameTo1DArray
getCameraList = _prosilica_cpp.getCameraList
test_it = _prosilica_cpp.test_it
test_it2 = _prosilica_cpp.test_it2


