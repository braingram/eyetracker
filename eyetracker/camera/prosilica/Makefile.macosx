# makefile for eyetracker code

# Target CPU
CPU	 = x86

# Target OS
#OS      = LINUX
OS	= OSX

OS_DIR  = OSX

# OS-X version
OSXV	= -mmacosx-version-min=10.4


# Optimisation level
#OPT     = -O3
OPT	 = -O0 $(OSXV)

# compiler version
ifeq ($(OS), OSX)
	CVER    = 4.0
else
	CVER	= 4.1
endif

# compiler
CC      = g++-$(CVER)

# linker
LD      = ld
AR      = ar

# some flags
DFLAGS	= -D_$(CPU) -D_$(OS)
FLAGS   = -fno-strict-aliasing -fexceptions -I/usr/include $(DFLAGS)

## few locations
ifeq ($(OS), OSX)
     PROSILICA_BASE= ProsilicaGigESDK_mac
else
     PROSILICA_BASE= ProsilicaGigESDK
endif

PROSILICA_INC_DIR	  = $(PROSILICA_BASE)/inc-pc
PROSILICA_BIN_DIR   = $(PROSILICA_BASE)/bin-pc/$(CPU)/$(CVER)
PROSILICA_LIB_DIR   = $(PROSILICA_BASE)/lib-pc/$(CPU)/$(CVER)

#OBJ_DIR	  = ./obj/$(CPU)
OBJ_DIR ="./"

ifeq ($(OS), OSX)
	EXTRA_LIB = -lpthread -lpython2.5
else
	EXTRA_LIB = -lpthread -lrt -lpython2.5
endif

PYTHON_LIB="/usr/lib"
PYTHON_INC="/usr/include/python2.5"

ifeq ($(OS), OSX)
	NUMPY_INC="/Library/Python/2.5/site-packages/numpy/core/include/numpy"
else	
	NUMPY_INC="/usr/lib/python2.5/site-packages/numpy/core/include/numpy"
endif
INC_DIR = "/usr/include"

## modules
PROSILICA_MODULE	= _prosilica_cpp.so
COBRA_MODULE		= _CobraEyeTrackerCpp.so

## Prosilica Sources
PROSILICA_SRCS	= Prosilica.cxx prosilica_cpp_wrap.cxx
PROSILICA_OBJS	= ${PROSILICA_SRCS:%.cxx=%.o}

## Cobra Sources
COBRA_SRCS		= Calibrator.cpp CalibratorDZ.cpp \
				  EthernetBridgedSerialDevice.cpp ESP300StageDevice.cpp \
				  EyeTrackerCameraDevice.cpp EyeTrackerLEDDevice.cpp \
				  EyeTrackerStageDevice.cpp MightexSiriusLEDDevice.cpp \
				  SimulatedStageDevice.cpp

COBRA_OBJS	= ${COBRA_SRCS:%.cpp=%.o}

COBRA_WRAPPER_SRCS = CobraEyeTrackerCpp_wrap.cxx
COBRA_WRAPPER_OBJS	= ${COBRA_WRAPPER_SRCS:%.cxx=%.o}


## shared libs & !shared libs
ifeq ($(OS), OSX)
	SHARED_LIBS	= -L$(PYTHON_LIB) $(EXTRA_LIB) -Bdynamic  -lm -lc  -framework CoreFoundation
else
	SHARED_LIBS	= -L$(PYTHON_LIB) $(EXTRA_LIB) -Bdynamic  -lm -lc 
endif

PROSILICA_STATIC_LIBS	= -Bstatic $(PROSILICA_LIB_DIR)/libImagelib.a $(PROSILICA_LIB_DIR)/libPvAPI.a

## final compilation flags
CFLAGS	= $(OPT) $(FLAGS) -g -Wall -I$(PROSILICA_INC_DIR) -I$(INC_DIR)  -I$(NUMPY_INC) -I$(PYTHON_INC) -D_REENTRANT $(EXTRA)
#CFLAGS	= $(OPT) $(FLAGS) -g -Wall -I$(PROSILICA_INC_DIR) -I$(INC_DIR) -I$(PYTHON_INC) -D_REENTRANT $(EXTRA)

ifeq ($(OS), OSX)
	LDFLAGS	= -g -shared -bundle
else
	LDFLAGS = -g -shared
endif

all: cobra_module prosilica_module


%.o:%.cxx
	$(CC) $(CFLAGS) -fPIC $(VERSION) -c $<

%.o:%.cpp
	$(CC) $(CFLAGS) -fPIC $(VERSION) -c $<


clean: 
	rm *.o	
	rm $(PROSILICA_MODULE)
	rm $(COBRA_MODULE)

prosilica_swig:
	swig -shadow -c++ -python -I$(PROSILICA_INC_DIR) prosilica_cpp.i

prosilica_module : prosilica_swig $(PROSILICA_OBJS)
	$(CC) $(LDFLAGS) $(PROSILICA_OBJS) $(PROSILICA_STATIC_LIBS) -o $(PROSILICA_MODULE) $(SHARED_LIBS)

cobra_swig:
	swig -shadow -c++ -python CobraEyeTrackerCpp.i

cobra_module: cobra_swig $(COBRA_OBJS) $(COBRA_WRAPPER_OBJS)
	$(CC) $(LDFLAGS) $(COBRA_OBJS) $(COBRA_WRAPPER_OBJS) -o $(COBRA_MODULE) $(SHARED_LIBS)
